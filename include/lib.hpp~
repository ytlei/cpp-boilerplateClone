/** @file lib.hpp
 *  @brief Library for class PID.
 *
 *  @author Sherif Shazly (sshazly)
 *  @copyright University of Maryland (ENPM808X)
 *  @bug No known bugs.
 */

#pragma once
#include<iostream>
#include <cmath>
using namespace std;

// Define the PID class with variable kp, kd, ki
class PID
{
	public:
		void setGain(double _kp, double _ki, double _kd);
		double getKi();
		double getKp();
		double getKd();
		double calculate(double setpoint, double pv);
	private:
		double kp;
		double kd;
		double ki;
};

// subfunction to set the private gain variables
void PID::setGain(double _kp, double _ki, double _kd)
{
	this->kp = _kp;
	this->ki = _ki;
	this->kd = _kd;
};

// subfunction to get the private gain variable Ki
double PID::getKi()
{
	return (ki);
};

// subfunction to get the private gain variable Kp
double PID::getKp()
{
	return (kp);
};

// subfunction to get the private gain variable Kd
double PID::getKd()
{
	return (kd);
};

// subfunction to calculate the increment neccessary to converge previous value (pv) to setpoint
double PID::calculate(double setpoint, double pv)
{
	double output = setpoint - pv + 1;
	return output;
};

